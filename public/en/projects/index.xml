<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Tiago&#39;s Blog</title>
    <link>https://tiagogiraldo.github.io/en/projects/</link>
    <description>Recent content in Projects on Tiago&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Sun, 12 Mar 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tiagogiraldo.github.io/en/projects/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Engineconomics</title>
      <link>https://tiagogiraldo.github.io/en/projects/02_engineconomics/</link>
      <pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://tiagogiraldo.github.io/en/projects/02_engineconomics/</guid>
      <description>EngineEconomics is a library developed in Python. It was designed to solve the main problems that arise in the area of Engineering Economics. It focuses on financial mathematics that occur over discrete time periods. The cash flows that are analyzed with this library are restricted to uniform times or fractions, without taking into account cash flows associated to dates, if you have something like that you must convert the periods to integers or fractions of time to be evaluated with the functions developed here.</description>
    </item>
    <item>
      <title>Sea Fish Recognition API</title>
      <link>https://tiagogiraldo.github.io/en/projects/01_fish_recognition_api/</link>
      <pubDate>Sun, 30 Aug 2020 10:00:00 +0000</pubDate>
      <guid>https://tiagogiraldo.github.io/en/projects/01_fish_recognition_api/</guid>
      <description>Sea Fish recognition API: Model developed with a RESNET 34 architecture with FastaAI2, Pytorch and Streamlite. The accuracy of the model in training was 7%. For the training of the model 44,134 images were used, which were scraped from the Internet.</description>
    </item>
  </channel>
</rss>
